1. 在登录成功后,在不刷新的情况下改变某个页面的数据
  import { DeviceEventEmitter, } from "react-native";
  登录成功之后,刷新某个页面  (pathMap.Home:为某页面路由名字)
  DeviceEventEmitter.emit(pathMap.Home + 'Reload', null);
  
  //在导航中添加查询数据的方法，设置一个钩子
    this.props.navigation.setParams({ init: _ => this.init() });
    this.subscription = DeviceEventEmitter.addListener(pathMap.Home + 'Reload', _ => {
      console.log('首页被刷新');
      this.init()
    });
    
2. 跳转页面传递参数
  onPress={() => {
        this.props.navigation.navigate('需要跳转的Screen', {
           title: '需要传递的参数'
        });
  }}
  
  class list extends Component{
  static navigationOptions =  ({ navigation }) =>({
          title: navigation.state.params.title,
      });
  render() {...} 
  }
3. navigationOptions使用class下面的方法
     headerRight: (
      <TouchableOpacity onPress={() => navigation.state.params.navigatePress()}>
        <Text
          style={[style.headerTitleLeft, global.fontSize14, global.fontStyle]}
        >
          {navigation.state.isDelete ? "删除" : "完成"}
        </Text>
      </TouchableOpacity>
    )
    async componentDidMount() {
      await this.init();
      this.props.navigation.setParams({ navigatePress: this.deleteGroup });
    }
     deleteGroup = () => {
        this.setState({
          isDelete: !this.state.isDelete
        });
      };
